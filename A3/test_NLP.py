# -*- coding: utf-8 -*-
"""ftest_NLP

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1icL4Ji2DPlgSOPQcZ7QIs8dA43vIE4Tg
"""

from keras.utils import get_file
import tarfile
data_dir = get_file('aclImdb_v1.tar.gz', 'http://ai.stanford.edu/~amaas/data/sentiment/aclImdb_v1.tar.gz', cache_subdir = "datasets",hash_algorithm = "auto", extract = True, archive_format = "auto")

my_tar = tarfile.open(data_dir)
my_tar.extractall('./data/') # specify which folder to extract to
my_tar.close()

from glob import glob
import os,re,string
import numpy as np
PATH='./data/aclImdb/'
names = ['neg','pos']

def load_texts_labels_from_folders(path, folders):
    texts,labels = [],[]
    for idx,label in enumerate(folders):
        for fname in glob(os.path.join(path, label, '*.*')):
            texts.append(open(fname, 'r').read())
            labels.append(idx)
    
    return texts, np.array(labels).astype(np.int64)

x_train,y_train = load_texts_labels_from_folders(f'{PATH}train',names)
x_test,y_test = load_texts_labels_from_folders(f'{PATH}test',names)

def preprocess_reviews(reviews):
    tokens = re.compile("[.;:!#\'?,\"()\[\]]|(<br\s*/><br\s*/>)|(\-)|(\/)")
    
    return [tokens.sub("", line.lower()) for line in reviews]

x_train_clean = preprocess_reviews(x_train)
x_test_clean = preprocess_reviews(x_test)

import tensorflow as tf
from tensorflow import keras
tok = keras.preprocessing.text.Tokenizer()
tok.fit_on_texts(x_train_clean) 
X_train = tok.texts_to_sequences(x_train_clean)
X_test = tok.texts_to_sequences(x_test_clean)

#" ".join(map(str,X_train[0]))

from sklearn.model_selection import train_test_split
X_train = keras.preprocessing.sequence.pad_sequences(X_train,padding='post',maxlen=1000)
X_test = keras.preprocessing.sequence.pad_sequences(X_test,padding='post',maxlen=1000)
X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.3, random_state=42)
# X_train[7]

# Commented out IPython magic to ensure Python compatibility.
# %pwd
# %cd /content/drive/My Drive/assignment3/

model=tf.keras.models.load_model("./models/20834941_NLP_model.h5")

scores = model.evaluate(X_test,y_test)
test_accuracy = scores[1]
print('accuracy on testing set:',test_accuracy)